{
  "name": "BROKERS: Logging Broker",
  "description": "Generates a Logging Broker",
  "templateType": "API",
  "projectsRequired": "Api",
  "sortOrder": 1,
  "modelSingularName": "Logging",
  "modelPluralName": "Loggings",
  "tasks": [
    {
      "name": "001 - BROKERS: Logging - Log Information",
      "actions": [
        {
          "name": "Create branch for Log Information",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Checkout base branch",
              "instruction": "git checkout $basebranch$"
            },
            {
              "name": "Fetch the latest code",
              "instruction": "git pull origin"
            },
            {
              "name": "Create new branch",
              "instruction": "git checkout -b users/$username$/brokers-loggers-loginformation"
            },
            {
              "name": "Install Microsoft.Extensions.Logging from NuGet",
              "instruction": "dotnet add $projectFile$ package Microsoft.Extensions.Logging"
            }
          ]
        },
        {
          "name": "Add Log Information",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\001_ILoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\ILoggingBroker.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\001_LoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\LoggingBroker.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"BROKERS: Logging - Log Information\""
            }
          ]
        },
        {
          "name": "Push branch for Log Information",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/brokers-loggers-loginformation"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"BROKERS: Logging - Log Information\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "002 - BROKERS: Logging - Log Trace",
      "actions": [
        {
          "name": "Create branch for Log Trace",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create new branch based on the current branch",
              "instruction": "git checkout -b users/$username$/brokers-loggers-logtrace users/$username$/brokers-loggers-loginformation"
            }
          ]
        },
        {
          "name": "Add Log Trace",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\002_ILoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\ILoggingBroker.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\002_LoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\LoggingBroker.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"BROKERS: Logging - Log LogTrace\""
            }
          ]
        },
        {
          "name": "Push branch for Log LogTrace",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/brokers-loggers-logtrace"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"BROKERS: Logging - Log Trace\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "003 - BROKERS: Logging - Log Debug",
      "actions": [
        {
          "name": "Create branch for Log Debug",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create new branch based on the current branch",
              "instruction": "git checkout -b users/$username$/brokers-loggers-logdebug users/$username$/brokers-loggers-logtrace"
            }
          ]
        },
        {
          "name": "Add Log Debug",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\003_ILoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\ILoggingBroker.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\003_LoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\LoggingBroker.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"BROKERS: Logging - Log LogDebug\""
            }
          ]
        },
        {
          "name": "Push branch for Log Debug",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/brokers-loggers-logdebug"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"BROKERS: Logging - Log Debug\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "004 - BROKERS: Logging - Log Warning",
      "actions": [
        {
          "name": "Create branch for Log Warning",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create new branch based on the current branch",
              "instruction": "git checkout -b users/$username$/brokers-loggers-logwarning users/$username$/brokers-loggers-logdebug"
            }
          ]
        },
        {
          "name": "Add Log Warning",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\004_ILoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\ILoggingBroker.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\004_LoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\LoggingBroker.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"BROKERS: Logging - Log LogWarning\""
            }
          ]
        },
        {
          "name": "Push branch for Log Warning",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/brokers-loggers-logwarning"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"BROKERS: Logging - Log Warning\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "005 - BROKERS: Logging - Log Error",
      "actions": [
        {
          "name": "Create branch for Log Error",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create new branch based on the current branch",
              "instruction": "git checkout -b users/$username$/brokers-loggers-logerror users/$username$/brokers-loggers-logwarning"
            }
          ]
        },
        {
          "name": "Add Log Error",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\005_ILoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\ILoggingBroker.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\005_LoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\LoggingBroker.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"BROKERS: Logging - Log LogError\""
            }
          ]
        },
        {
          "name": "Push branch for Log Error",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/brokers-loggers-logerror"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"BROKERS: Logging - Log Error\" -b \" \""
            }
          ]
        }
      ]
    },
    {
      "name": "006 - BROKERS: Logging - Log Critical",
      "actions": [
        {
          "name": "Create branch for Log Critical",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create new branch based on the current branch",
              "instruction": "git checkout -b users/$username$/brokers-loggers-logcritical users/$username$/brokers-loggers-logerror"
            }
          ]
        },
        {
          "name": "Add Log Critical",
          "executionFolder": "$projectFolder$",
          "fileItems": [
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\006_ILoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\ILoggingBroker.cs",
              "replace": true
            },
            {
              "template": "$templateFolder$\\Api\\Brokers\\Loggings\\006_LoggingBroker.cs.txt",
              "target": "$projectFolder$\\$brokers$\\Loggings\\LoggingBroker.cs",
              "replace": true
            }
          ],
          "executions": [
            {
              "name": "Stage all changes",
              "instruction": "git add -A"
            },
            {
              "name": "Commit staged changes",
              "instruction": "git commit -m \"BROKERS: Logging - Log LogCritical\""
            }
          ]
        },
        {
          "name": "Push branch for Log Critical",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Push changes to <remote>",
              "instruction": "git push origin users/$username$/brokers-loggers-logcritical"
            }
          ]
        },
        {
          "name": "Create Pull Request",
          "executionFolder": "$projectFolder$",
          "executions": [
            {
              "name": "Create Pull Request",
              "instruction": "gh pr create $draftPullRequest$ -t \"BROKERS: Logging - Log Critical\" -b \" \""
            }
          ]
        }
      ]
    }
  ],
  "cleanupTasks": [
    "* Register the LoggingBroker in Startup.cs => AddBrokers(IServiceCollection services) then do a commit and push.",
    "* Resolve / remove any TODO items in the task list",
    "* Link the pull request(s) to related issues by adding e.g. #CLOSES 123 to the description",
    "* Review Draft Pull Requests (and add more commits by pushing to any of the branches if needed):",
    "  - BROKERS: Logging - Log Information  ->  users/$username$/brokers-loggers-loginformation",
    "  - BROKERS: Logging - Log LogTrace  ->  users/$username$/brokers-loggers-logtrace",
    "  - BROKERS: Logging - Log LogDebug  ->  users/$username$/brokers-loggers-logdebug",
    "  - BROKERS: Logging - Log LogWarning  ->  users/$username$/brokers-loggers-logwarning",
    "  - BROKERS: Logging - Log LogError  ->  users/$username$/brokers-loggers-logerror",
    "  - BROKERS: Logging - Log LogCritical  ->  users/$username$/brokers-loggers-logcritical"
  ]
}