<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>